version: '3'

services:
# Databases configurations
  
  ecom-mongo-db:
    image: mongo:latest
    container_name: ecom-mongo-container
    ports:
      - "3153:27017"
    volumes:
      - mongodata:/data/db

  ecom-zipkin-storage:
    platform: linux/arm64
    image: openzipkin/zipkin-mysql
    container_name: zipkin-playground-mysql
    ports:
      - 3154:3306

  ecom-master-db-service:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_PASSWORD: Aj189628@
      POSTGRES_USER: janny
    ports:
      - 3155:5432
    volumes:
      - ecommerce-microservice_timescale_data:/var/lib/postgresql/data

# Prometheus configuration
  prometheus:
    image: prom/prometheus:latest
    container_name: ecom-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 3198:9090
  grafana:
    image: grafana/grafana:latest
    container_name: ecom-grafana
    ports:
      - 3197:3000
# Zipkin configuration
  
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-playground-zipkin
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      - MYSQL_HOST=ecom-zipkin-storage
      - MYSQL_JDBC_URL=jdbc:mysql://ecom-zipkin-storage:3306/zipkin?passwordCharacterEncoding=UTF-8&useGssapiServerConnection=false
    ports:
      - 3192:9411
    depends_on:
      - ecom-zipkin-storage
#  ELK configuration
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=Aj189628@

  fluentd:
    build: ./fluentd
    ports:
      - 24224:24224
      - 24224:24224/udp
    links:
      - "elasticsearch"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    ports:
      - 3194:5601
    links:
      - "elasticsearch"

# All Services Configuration
  ecom-service-registry:
    build:
      context: .
      dockerfile: './ecom-service-registry/Dockerfile'
    ports:
      - "3145:3145"
    volumes:
      - ecom-service-registry-volume:/app

  ecom-config-server:
    build:
      context: .
      dockerfile: './ecom-config-server/Dockerfile'
    volumes:
      - ecom-config-server-volume:/app

  ecom-api-gateway:
    build:
      context: .
      dockerfile: './ecom-api-gateway/Dockerfile'
    ports:
      - "3099:3099"
    depends_on: 
      - ecom-config-server
    volumes:
      - ecom-api-gateway-volume:/app

  ecom-auth-service:
    build:
      context: .
      dockerfile: './ecom-auth-service/Dockerfile'
    environment:
      DATABASE_URL: postgres://janny:Aj189628@@ecom-master-db-service:5432/ecom-auth-service
      PORT: 3100
      JWT_SECRET: Aj189628@
      PASS_SECRET: Aj189628@
    depends_on:
      - ecom-master-db-service
    volumes:
      - ecom-auth-service-volume:/path/in/container

volumes: 
  ecommerce-microservice_timescale_data:
    external: true
  mongodata:
  ecom-service-registry-volume:
  ecom-config-server-volume:
  ecom-api-gateway-volume:
  ecom-auth-service-volume: